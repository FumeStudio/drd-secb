apply plugin: 'com.android.application'
//if (project.hasProperty("project.properties")
//        && new File(project.property("project.properties")).exists())
//{
//    Properties props = new Properties()
//    props.load(new FileInputStream(file(project.property("project.properties"))))
//    android {
//        signingConfigs {
//            release_signing {
//                keyAlias 'android_signature'
//                keyPassword props['keystore.password']
//                storeFile file(props['keystore'])
//                storePassword props['keystore.password']
//            }
//            debug_signing {
//                keyAlias 'debug'
//                keyPassword props['keystore.password']
//                storeFile file(props['keystore'])
//                storePassword props['keystore.password']
//            }
//        }


android {
    signingConfigs {
        release_signing {
//            keyAlias 'android_signature'
//            keyPassword 'user_9999'
//            storeFile file('D:/Media/Video/Tutorials/Android/Amir-Hakim/workspace/drd-secb/SECB/Signing_key/secb_key_store.keystore')
//            storePassword 'user_9999'

            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
        debug_signing {
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    compileSdkVersion 22
    buildToolsVersion '21.1.2'
    defaultConfig {
        applicationId "com.secb.android"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0.5"
        /*signingConfig signingConfigs.release_signing*/
        signingConfig signingConfigs.release_signing
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /* productFlavors {
         debug {
             minSdkVersion 14
             applicationId 'com.secb.android'
             signingConfig signingConfigs.debug_release
             targetSdkVersion 22
             versionCode 1
             versionName '1.0.5'
         }
     }*/
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.google.android.gms:play-services:7.3.0'
    compile 'commons-io:commons-io:+'
    compile 'org.apache.httpcomponents:httpmime:4.2.3'
    compile 'io.segment.analytics.android:flurry:1.3.1'
    //    compile 'org.twitter4j:twitter4j-core:4.0.3'
    //    compile 'com.googlecode.libphonenumber:libphonenumber:7.0.5'
    //    compile 'org.apache.axis:axis:1.4'
    //    compile 'com.android.support:cardview-v7:22.0.+'
    compile 'com.android.support:recyclerview-v7:22.1.1'
    compile 'com.android.support:cardview-v7:22.1.1'
    compile 'com.wefika:flowlayout:0.4.1'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.picasso:picasso:2.4.0'
    compile project(':library')
    compile files('libs/YouTubeAndroidPlayerApi.jar')
}
//}